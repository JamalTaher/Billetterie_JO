security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\Utilisateur:
            algorithm: auto

    # https://symfony.com/doc/current/security#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            provider: app_user_provider
            logout:
                path: /logout
            custom_authenticator: App\Security\LoginFormAuthenticator
            entry_point: App\Security\LoginFormAuthenticator # Définir l'entry point
            form_login:
                login_path: /login
                check_path: /login # The route name that the login form submits to
                username_parameter: email   # Correspond à name="email" dans le formulaire
                password_parameter: password # Correspond à name="password" dans le formulaire
                failure_path: app_login
                failure_forward: false # Important pour que l'exception UserNotFoundException soit capturée
                default_target_path: app_home
            # ... autres configurations ...

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            # ... (configuration pour l'environnement de test) ...